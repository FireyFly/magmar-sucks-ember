@font-face {
  font-family: orator;
  src: url('/orator.ttf');
}

$background: #edf7f7;
$primaryAccent: #eb701f;
$primaryText: #1c4343;
$secondaryText: #7fb2b1;
$secondaryField: #a5b5b5;
$tertiaryDark: #9056a3;
$tertiaryLight: #ffffff;

nav, nav > *{
  background-color: $secondaryField !important;
}

.nav-link.mobile{
  color: $tertiaryLight !important;
}

p, td {
  color: $primaryText !important;
}

td {
  color: $primaryText;
  border-color: $secondaryText;
}

table, tr, th {
  color: $secondaryText !important;
  border-color: $secondaryText !important;
}

.table td {
    border-top: 1px solid $secondaryText !important;
}

body {
  font-family: 'Open Sans' !important;
}

h1, h2, h3, h4, h5, h6 {
  color: $primaryAccent;
  font-family: "iskra" !important!important;
}


html, body, div {
  background-color: $background;
}

.social-link, hr {
  color: $secondaryField;
}
.social-link:hover, .social-link:focus{
  color: $tertiaryDark;
}

.nav-link, th{
  font-family: orator;
}

.nav-link.active {
  background-color: $primaryAccent !important;
  color: $tertiaryLight !important;
}

.nav-link.active:hover{
  background-color: $tertiaryDark !important;
  color: $tertiaryLight !important;
}
.nav-link, .rotatable, .rotated {
  color: $primaryAccent !important;
}
.nav-link:hover, .rotatable:hover, .rotated:hover, .rotatable:focus, .rotated:focus {
  color: $tertiaryDark !important;
}

th.fit,td.fit{width: 1%;white-space: nowrap;}

.remodal-wrapper{
    padding: 0 !important;
}

.rotatable {
    transition: all .1s linear;
}
.rotatable.rotated {
    transform: rotate(90deg);
}

.episode-card {
    margin-bottom: 1em;
}

body {
    max-width: 1200px;
    margin: auto;
    padding: 0 10px !important;
}

.episode-card-wrapper{
    border: 1px solid $secondaryText;
    padding: 1em;
    margin-bottom: 1em;
    border-radius: 12px;
}

.ember-remodal.window{
  background-color: $background;
  color: $primaryText;
  border: 1px solid $secondaryText;
}
.remodal-close{
  right: 0 !important;
}
.ember-remodal.native.close{
  color: $primaryText;
}
.ember-remodal.native.close:hover{
  color: $tertiaryDark;
}

.ember-remodal.title.text{
  font-family: "iskra" !important;
}

.btn.btn-primary{
  background-color: $primaryAccent !important;
}

.btn.btn-primary:hover{
  background-color: $tertiaryDark;
}

.form-control{
  background-color: $secondaryField !important;
}

.form-control::placeholder{
  color: $tertiaryLight !important;
}

.form-control:focus{
  border-color: $primaryAccent !important;
}

a{
  color: $primaryAccent;
}

a:hover, a:focus{
  color: $tertiaryDark;
}

.episode-date{
  color: $secondaryText !important;
}

.episode-description{
  color: $primaryText;
}
.no-show{
    display:none;
}

td > div {
    width: 100% !important;
}

*, *:before, *:after {
  box-sizing: border-box;
}
body {
  background: #ecf0f1;
}
.center-on-page {
  position: relative;
  top: 0;
  left: calc(50% - 100px);
}

/* Pok√© Styles */
.pokeball {
  position: relative;
  width: 200px;
  height: 200px;
  background: #fff;
  border: 10px solid #000;
  border-radius: 50%;
  overflow: hidden;
  box-shadow: inset -10px 10px 0 10px #ccc;
  animation: shake 1.25s cubic-bezier(.36,.07,.19,.97) infinite;
}
.pokeball::before,
.pokeball::after {
  content:"";
  position: absolute;
}
.pokeball::before {
  background: red;
  width: 100%;
  height: 50%;
}
.pokeball::after {
  top: calc(50% - 10px);
  width: 100%;
  height: 20px;
  background: #000;
}
.pokeball__button {
  position: absolute;
  top: calc(50% - 30px);
  left: calc(50% - 30px);
  width: 60px;
  height: 60px;
  background: #7f8c8d;
  border: 10px solid #fff;
  border-radius: 50%;
  z-index: 10;
  box-shadow: 0 0 0 10px black;
  animation: blink .5s alternate infinite;
}
/* Animation */
@keyframes blink {
  from { background: #eee;}
  to { background: #e74c3c; }
}
@keyframes shake {
  0 { transform: translate(0, 0) rotate(0); }
  20% { transform: translate(-10px, 0) rotate(-20deg); }
  30% { transform: translate(10px, 0) rotate(20deg); }
  50% { transform: translate(-10px, 0) rotate(-10deg); }
  60% { transform: translate(10px, 0) rotate(10deg); }
  100% { transform: translate(0, 0) rotate(0); }
}
@keyframes fall {
  0% { top: -200px }
  60% { top: 0 }
  80% { top: -20px }
  100% { top: 0 }
}

.loading {
  /*font-size: 30px;*/
  /*transform: translate(10%, 0%);*/
}

.loading:after {
  overflow: hidden;
  display: inline-block;
  vertical-align: bottom;
  -webkit-animation: ellipsis steps(4,end) 900ms infinite;
  animation: ellipsis steps(4,end) 900ms infinite;
  content: "\2026"; /* ascii code for the ellipsis character */
  width: 0px;
}

@keyframes ellipsis {
  to {
    width: 1.25em;
  }
}

@-webkit-keyframes ellipsis {
  to {
    width: 1.25em;
  }
}
